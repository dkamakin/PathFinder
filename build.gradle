plugins {
    id "io.spring.dependency-management" version "1.1.3"
    id "org.springframework.boot" version "$springBootVersion"
    id "java"
    id "java-test-fixtures"
    id "java-library"
}

group = 'com.github'
version = '1.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

subprojects {
    apply plugin: 'java'
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"
    apply plugin: 'java-library'

    def lombokVersion = "1.18.28"
    def assertJVersion = "3.24.2"
    def h2Version = "2.2.220"
    def postgresqlVersion = "42.6.0"
    def guavaVersion = "32.1.2-jre"
    def testcontainersSpringVersion = "3.0.0-RC7"
    def testcontainersVersion = "1.18.3"
    def springRetryVersion = "2.0.2"
    def springActuatorVersion = "3.1.3"
    def springCloudBusVersion = "4.0.1"

    ext {
        mainClassName = ''
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-validation:$springBootVersion")
        implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
        implementation("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
        implementation("org.springframework.retry:spring-retry:$springRetryVersion")
        implementation("org.springframework.boot:spring-boot-starter-actuator:$springActuatorVersion")
        api("org.springframework.cloud:spring-cloud-starter-bus-amqp:$springCloudBusVersion")

        implementation("org.postgresql:postgresql:$postgresqlVersion")

        implementation("com.google.guava:guava:$guavaVersion")

        testRuntimeOnly("com.h2database:h2:$h2Version")
        testImplementation("org.assertj:assertj-core:$assertJVersion")
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
        testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
        testImplementation("org.projectlombok:lombok:$lombokVersion")

        testImplementation("com.playtika.testcontainers:testcontainers-spring-boot:$testcontainersSpringVersion")
        testImplementation("com.playtika.testcontainers:embedded-neo4j:$testcontainersSpringVersion")
        testImplementation("org.testcontainers:testcontainers:$testcontainersVersion")

        compileOnly("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    }

    test {
        useJUnitPlatform()
    }

    afterEvaluate {
        jar {
            manifest {
                attributes(
                        "Implementation-Title": project.name,
                        "Implementation-Version": project.version,
                        "Main-Class": mainClassName
                )
            }
            include '**/**'
        }
    }
}