[versions]
lombok = "1.18.32"
assertj = "3.25.3"
postgresql = "42.7.3"
guava = "33.2.0-jre"
springRetry = "2.0.6"
springActuator = "3.2.5"
apacheCommons = "3.14.0"
mapStruct = "1.5.5.Final"
springSecurityTest = "6.2.4"
springBoot = "3.2.2"
geoTools = "31.2"
westnordost = "3.0"
testcontainers = "1.19.8"
springCloud = "4.1.1"
springDoc = "2.5.0"
springAmqp = "3.1.4"
jwt = "4.4.0"
testcontainersCustom = "3.1.6"
springDependencyManagement = "1.1.5"
springTransaction = "6.1.7"
jib = "3.4.2"
junit = "5.10.2"
liquibase = "4.27.0"

[libraries]

# Liquibase

liquibase = { group = "org.liquibase", name = "liquibase-core", version.ref = "liquibase" }

# Spring AMQP

spring-rabbit = { group = "org.springframework.amqp", name = "spring-rabbit", version.ref = "springAmqp" }
spring-amqp = { group = "org.springframework.amqp", name = "spring-amqp", version.ref = "springAmqp" }

# Spring Boot

spring-json = { group = "org.springframework.boot", name = "spring-boot-starter-json", version.ref = "springBoot" }
spring-jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa", version.ref = "springBoot" }
spring-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation", version.ref = "springBoot" }
spring-web = { group = "org.springframework.boot", name = "spring-boot-starter-web", version.ref = "springBoot" }
spring-aop = { group = "org.springframework.boot", name = "spring-boot-starter-aop", version.ref = "springBoot" }
spring-actutor = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "springActuator" }
spring-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "springBoot" }
spring-neo4j = { group = "org.springframework.boot", name = "spring-boot-starter-data-neo4j", version.ref = "springBoot" }
spring-test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "springBoot" }
spring-security-test = { group = "org.springframework.security", name = "spring-security-test", version.ref = "springSecurityTest" }
spring-transaction = { group = "org.springframework", name = "spring-tx", version.ref = "springTransaction" }

# Spring Retry

spring-retry = { group = "org.springframework.retry", name = "spring-retry", version.ref = "springRetry" }

# SpringDoc

spring-doc = { group = "org.springdoc", name = "springdoc-openapi-starter-webmvc-ui", version.ref = "springDoc" }

# Spring Data

spring-data-jpa = { group = "org.springframework.data", name = "spring-data-jpa", version.ref = "springBoot" }

# GeoTools

geoTools = { group = "org.geotools", name = "gt-main", version.ref = "geoTools" }

# Spring Cloud

spring-cloud-config-client = { group = "org.springframework.cloud", name = "spring-cloud-starter-config", version.ref = "springCloud" }
spring-cloud-monitor = { group = "org.springframework.cloud", name = "spring-cloud-config-monitor", version.ref = "springCloud" }
spring-cloud-stream = { group = "org.springframework.cloud", name = "spring-cloud-starter-stream-rabbit", version.ref = "springCloud" }
spring-cloud-config-server = { group = "org.springframework.cloud", name = "spring-cloud-config-server", version.ref = "springCloud" }
spring-cloud-bus = { group = "org.springframework.cloud", name = "spring-cloud-starter-bus-amqp", version.ref = "springCloud" }

# OSM

osmapi-core = { group = "de.westnordost", name = "osmapi-core", version.ref = "westnordost" }
osmapi-map = { group = "de.westnordost", name = "osmapi-map", version.ref = "westnordost" }
osmapi-overpass = { group = "de.westnordost", name = "osmapi-overpass", version.ref = "westnordost" }

# MapStruct

mapStruct = { group = "org.mapstruct", name = "mapstruct", version.ref = "mapStruct" }
mapStruct-processor = { group = "org.mapstruct", name = "mapstruct-processor", version.ref = "mapStruct" }

# Apache

apache-commons = { group = "org.apache.commons", name = "commons-lang3", version.ref = "apacheCommons" }

# PostgreSQL

postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }

# Guava

guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }

# JWT

jwt = { group = "com.auth0", name = "java-jwt", version.ref = "jwt" }

# lombok

lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }

# Testcontainers

testcontainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testcontainers-rabbitmq = { group = "org.testcontainers", name = "rabbitmq", version.ref = "testcontainers" }
testcontainers-junit = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
testcontainers-neo4j = { group = "com.playtika.testcontainers", name = "embedded-neo4j", version.ref = "testcontainersCustom" }

# AssertJ

assertj = { group = "org.assertj", name = "assertj-core", version.ref = "assertj" }

# JUnit

junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }

[plugins]

spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
spring = { id = "org.springframework.boot", version.ref = "springBoot" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
